"use strict";(self.webpackChunkloopback_blog=self.webpackChunkloopback_blog||[]).push([[8162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=r,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||a;return n?o.createElement(m,l(l({ref:t},p),{},{components:n})):o.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8835:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={title:"LoopBack 4 Offers Inclusion of Related Models",date:new Date("2019-10-23T00:00:00.000Z"),authors:"agnes512",slug:"inclusion-of-related-models",tags:["feature","related models"]},l=void 0,i={permalink:"/blog/inclusion-of-related-models",editUrl:"https://github.com/loopbackio/loopback-blog/blog/2019/2019-10-23-inclusion-of-related-models.md",source:"@site/blog/2019/2019-10-23-inclusion-of-related-models.md",title:"LoopBack 4 Offers Inclusion of Related Models",description:"Originally published on strongloop.com",date:"2019-10-23T00:00:00.000Z",formattedDate:"October 23, 2019",tags:[{label:"feature",permalink:"/blog/tags/feature"},{label:"related models",permalink:"/blog/tags/related-models"}],readingTime:6.375,hasTruncateMarker:!0,authors:[{name:"Agnes Lin",title:"LoopBack Maintainer",url:"https://github.com/agnes512",imageURL:"https://avatars3.githubusercontent.com/u/50331796",key:"agnes512"}],frontMatter:{title:"LoopBack 4 Offers Inclusion of Related Models",date:"2019-10-23T00:00:00.000Z",authors:"agnes512",slug:"inclusion-of-related-models",tags:["feature","related models"]},prevItem:{title:"LoopBack 4 October 2019 Milestone Update",permalink:"/blog/october-2019-milestone"},nextItem:{title:"LoopBack 4 2019 Q3 Overview",permalink:"/blog/loopback-4-2019-q3-overview"}},s={authorsImageUrls:[void 0]},c=[],p={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Originally published on ",(0,r.kt)("a",{parentName:"em",href:"https://strongloop.com"},"strongloop.com"))),(0,r.kt)("p",null,"LoopBack 4 now offers a new feature: inclusion of related models! This addition not only simplifies querying data in LoopBack 4, but since we have similar features in LoopBack 3 it also closes one feature gap between LoopBack 3 as well. The idea is to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"inclusion resolver"),", which is a function that helps to query data over different relations, to achieve such simplifications for us."),(0,r.kt)("p",null,"Here is a simple use case of inclusion: a customer has many orders."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"hasMany",src:n(9069).Z,width:"2884",height:"540"})),(0,r.kt)("p",null,"If we'd like to get a customer's instance with all their orders instances, we can query on ",(0,r.kt)("inlineCode",{parentName:"p"},"Customer")," with filter ",(0,r.kt)("inlineCode",{parentName:"p"},"{include: [{relation: 'orders']}"),". The inclusion resolvers are similar to GraphQL resolvers -- it will find the target instances of ",(0,r.kt)("inlineCode",{parentName:"p"},"Customer")," first and pass its result to the inclusion resolver of ",(0,r.kt)("inlineCode",{parentName:"p"},"orders"),". The query result will contain the return value of ",(0,r.kt)("inlineCode",{parentName:"p"},"orders")," nested under corresponding ",(0,r.kt)("inlineCode",{parentName:"p"},"Customer")," instead of connecting to database twice. Read on for detailed examples and explanations!"))}d.isMDXComponent=!0},9069:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/inclusion-of-related-models-hasmany-3c062e8e6b871d17f8b7a3b84a47cc1f.png"}}]);