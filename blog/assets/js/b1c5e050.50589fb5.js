"use strict";(self.webpackChunkloopback_blog=self.webpackChunkloopback_blog||[]).push([[9154],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>d});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(o),h=a,d=u["".concat(l,".").concat(h)]||u[h]||m[h]||r;return o?n.createElement(d,i(i({ref:t},c),{},{components:o})):n.createElement(d,i({ref:t},c))}));function d(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<r;p++)i[p]=o[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}h.displayName="MDXCreateElement"},3793:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=o(7462),a=(o(7294),o(3905));const r={title:"Community Q&A Monthly Digest - July 2020",date:new Date("2020-08-19T00:00:00.000Z"),authors:"dhmlau",slug:"2020-jul-slack-qa",tags:["Community","Slack","Q&A"]},i=void 0,s={permalink:"/blog/2020-jul-slack-qa",editUrl:"https://github.com/loopbackio/loopback-blog/blog/2020/2020-08-19-july-slack-qanda.md",source:"@site/blog/2020/2020-08-19-july-slack-qanda.md",title:"Community Q&A Monthly Digest - July 2020",description:"Originally published on strongloop.com",date:"2020-08-19T00:00:00.000Z",formattedDate:"August 19, 2020",tags:[{label:"Community",permalink:"/blog/tags/community"},{label:"Slack",permalink:"/blog/tags/slack"},{label:"Q&A",permalink:"/blog/tags/q-a"}],readingTime:2.5,hasTruncateMarker:!0,authors:[{name:"Diana Lau",title:"LoopBack Maintainer",url:"https://github.com/dhmlau",imageURL:"https://avatars2.githubusercontent.com/u/25489897",key:"dhmlau"}],frontMatter:{title:"Community Q&A Monthly Digest - July 2020",date:"2020-08-19T00:00:00.000Z",authors:"dhmlau",slug:"2020-jul-slack-qa",tags:["Community","Slack","Q&A"]},prevItem:{title:"Enriching LoopBack and its Community - You are Invited!",permalink:"/blog/2020-community-contribution"},nextItem:{title:"LoopBack 4 July 2020 Milestone Update",permalink:"/blog/july-2020-milestone"}},l={authorsImageUrls:[void 0]},p=[{value:"Interested to Join our Slack Workspace?",id:"interested-to-join-our-slack-workspace",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...o}=e;return(0,a.kt)(u,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Originally published on ",(0,a.kt)("a",{parentName:"em",href:"https://strongloop.com"},"strongloop.com"))),(0,a.kt)("p",null,'Welcome to the July edition of the "Community Q&A Monthly Digest", curating some of the Q&A that we think it might be helpful to you. Let\'s take a look.'),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question"),": Is there a built-in support in LB4 for database retries if the db responds with 429 for example? Or is it possible to overwrite a single method to implement this for all db operations similiar to how entityToData can be overwriten if data should be added to all create/update operations."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": It's better to intercept execution errors inside the datasource, not at repository level. I created a small example to demonstrate the approach. In a real app, I would extract the code into a mixin that can be applied on any DataSource class.\n",(0,a.kt)("a",{parentName:"p",href:"https://gist.github.com/bajtos/2379d7c6df31e477aaa3a3f6ea87886c"},"https://gist.github.com/bajtos/2379d7c6df31e477aaa3a3f6ea87886c")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question"),": Is it possible to connect my API to a webhook, so that when an event is triggered, it notifies my API? What documentation could I read about doing this?"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": A webhook is just another HTTP request. Depending on the architecture of the lb4 app, this request can be done in a Service, an Interceptor, or a Controller, using either the built-in Node.js API or third-party HTTP request modules such as Axios.\nBesides that, no special configuration is needed for web hooks.\xa0"),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question"),": How to implement\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"findOrCreate"),"\xa0instead\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"await exists"),"\xa0+\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"await create"),"?"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": You can extend\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"DefaultCrudRepository"),"\xa0with\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"findOrCreate"),"\xa0\u2019s implementation.\nThen your repositories extend the custom one. Similar to\xa0how ",(0,a.kt)("inlineCode",{parentName:"p"},"AccountRepository")," extends ",(0,a.kt)("inlineCode",{parentName:"p"},"MyDefaultCrudRepository")," in the tutorial ",(0,a.kt)("a",{parentName:"p",href:"https://loopback.io/doc/en/lb4/Repositories.html#define-repositories"},"https://loopback.io/doc/en/lb4/Repositories.html#define-repositories"),"."),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question"),": I started using Loopback 4. How to redirect home screen of LB4 to angular 8 running on some other port?"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": It should be possible to replace the ",(0,a.kt)("inlineCode",{parentName:"p"},".static")," function in the app class with ",(0,a.kt)("inlineCode",{parentName:"p"},".redirect"),": ",(0,a.kt)("a",{parentName:"p",href:"https://loopback.io/doc/en/lb4/apidocs.rest.restapplication.redirect.html"},"https://loopback.io/doc/en/lb4/apidocs.rest.restapplication.redirect.html"),"."),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question"),": The compiler throws the error ",(0,a.kt)("inlineCode",{parentName:"p"},"error TS2322: Type 'string' is not assignable to type PredicateComparison<..>")," when I tried some repository CRUD methods. Is it a bug or anything wrong with my setup?"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": It is a type issue. For ",(0,a.kt)("a",{parentName:"p",href:"https://loopback.io/doc/en/lb4/apidocs.repository.defaultcrudrepository.html#methods"},"repository CRUD methods"),", they may take in ",(0,a.kt)("inlineCode",{parentName:"p"},"Filter")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"Where")," type parameters. For those cases, you will need to specify the type of it, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const userCount = await this.userRepository.count({tags: 'admin'} as Where<User>);\nconst vipUser = await this.userRepository.find({where:{tags: 'vip'}} as Filter<User>);\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Question"),": We have a project which includes multi-tenancy based multi-database pattern (We have Common DB which stores Client Informations (Users, DB configs etc), and each clients has own database). How can I perform switching datasource dynamically with the multi-tenancy based project?"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Answer"),": You can check out ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/strongloop/loopback-next/tree/master/examples/multi-tenancy"},"the multi-tenancy example")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/strongloop/loopback-next/issues/5056"},"the GH issue")," that discusses about multi-tenancy and dynamic schema selection. You can create datasources at runtime. Meanwhile, if the number of dbs is limited, you can define them upfront and reuse them, see ",(0,a.kt)("a",{parentName:"p",href:"https://loopback.io/doc/en/lb4/DataSources.html#creating-a-datasource-at-runtime"},"Creating a datasource at runtime"),". Then the tenant strategy can inject a repository talking to your common DB to load configs per logged in user."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"interested-to-join-our-slack-workspace"},"Interested to Join our Slack Workspace?"),(0,a.kt)("p",null,"Simply click ",(0,a.kt)("a",{parentName:"p",href:"https://join.slack.com/t/loopbackio/shared_invite/zt-8lbow73r-SKAKz61Vdao~_rGf91pcsw"},"this invitation link")," to join. You can also find more channel details here: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/strongloop/loopback-next/issues/5048"},"https://github.com/strongloop/loopback-next/issues/5048"),"."))}m.isMDXComponent=!0}}]);